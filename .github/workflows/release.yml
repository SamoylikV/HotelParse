name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [windows-latest]
        arch: [amd64]

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.22"

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Fyne CLI
        run: go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential mingw-w64

      - name: Build the application
        env:
          GOOS: windows
          GOARCH: amd64
          CC: x86_64-w64-mingw32-gcc
        run: |
          fyne package -os windows -icon "assets/Icon.png" -name "HotelParse.exe"
        shell: /usr/bin/bash -e {0}

      - name: Archive the build
        run: |
          zip -r HotelParse-Windows-amd64.zip HotelParse.exe
        shell: bash

      - name: Upload release asset
        uses: actions/upload-artifact@v3
        with:
          name: windows-amd64
          path: HotelParse-Windows-amd64.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: windows-amd64
          path: ./release/windows-amd64

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./release/windows-amd64/HotelParse-Windows-amd64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
